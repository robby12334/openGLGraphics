Linux support for Oculus Rift is still considered experimental, and must be
compiled from source. You will need to be on a computer that you have root
 
IMPORTANT: These instructions are based on the Oculus SDK version
0.5.0.1. If you use a different version, these instructions may not be
completely correct!

=== Installation ===
1. Find a copy of the Linux Oculus SDK version 0.5.0.1. If you can't find a copy of it, try /local/kuhl-public-share/opengl/ovr_sdk_linux_0.5.0.1.tar.xz on the Michigan Tech filesystem.
2. Extract the contents using "tar -xf ovr_sdk_linux*.tar.xz"
3. If you are on a Debian or Ubuntu machine, run "sudo ./ConfigureDebian.sh"

    If you are not on a Debian/Ubuntu machine, you can open the script
    in a text editor and note the packages that it installs via
    apt-get. You may need to install similar packages on your system
    to get the library to compile. You may also need administrator
    access to install a udev-related file onto your system.

4. Run "make release".

5. Start the Oculus dameon by running:
Service/OVRServer/Bin/Linux/x86_64/ReleaseStatic/ovrd
If you want to run the daemon in the background, use the "-d" parameter.
You can see if it is running by using the command "ps aux | grep ovrd".

=== Running a sample program ===
The Oculus driver comes with a sample program in the "Samples/OculusWorldDemo/Bin/x86_64/Release".

Before you try running it, copy the files inside of "LibOVR/Lib/Linux/x86_64/Release" into the folder containing the sample program.

You can use that to confirm that LibOVR can successfully communicate with your HMD.


=== Oculus Configuration ===
You do not necessarily have to perform this step to use your HMD.

1. Make sure oculusd is running.
2. Run "cd Tools/RiftConfigUtil/Bin/Linux/x86_64/ReleaseStatic"
3. Run "./RiftConfigUtil"
4. If it gives an error message, you may need to modify permissions of the 
   Resources directory and its contents before being able to run the utility.
